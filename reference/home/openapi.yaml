swagger: '2.0'
info:
  contact:
    name: Admin
  description: 'Адрес хоста для запросов: https://cloud.speechanalytics.ru/'
  title: Home
  version: '1.0'
schemes:
  - https
paths:
  /account:
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            description: Проверка аккаунта
            properties:
              id:
                type: number
              status:
                type: string
            type: object
            x-examples:
              account:
                value:
                  id: 100001
                  status: VALID
      security:
        - Basic: []
      tags: []
      description: '### Узнать текущий аккаунт'
      operationId: account
      summary: Get Account
  /account/available_accounts:
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            items:
              description: Доступные аккаунты
              properties:
                id:
                  type: number
                name:
                  type: string
              type: object
              x-examples:
                availableAccount:
                  value:
                    id: 100203
                    name: Test Account
            type: array
      security:
        - Basic: []
      tags: []
      description: '### Список доступных аккаунтов'
      operationId: availableAccounts
      summary: Available Accounts
  '/account/change/{account_id}':
    parameters:
      - in: path
        name: account_id
        required: true
        type: string
    post:
      parameters: []
      responses:
        '200':
          description: OK
      security:
        - Basic: []
      tags: []
      description: '### Смена аккаунта (проекта)'
      operationId: changeAccount
      summary: Change Account(Project)
  /async_reports/generate_excel:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          type: string
        - description: ''
          in: body
          name: body
          schema:
            properties:
              date_from:
                example: 1552942800
                format: date-time
                type: number
              date_till:
                example: 1552942800
                format: date-time
                type: number
              dimensions:
                items:
                  type: string
                type: array
              metric_filters:
                items:
                  properties:
                    label:
                      type: string
                    operator:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
              metrics:
                items:
                  type: string
                type: array
              phrase_filters:
                items:
                  properties:
                    label:
                      type: string
                    min_matches:
                      type: number
                    operator:
                      type: string
                    value:
                      items:
                        type: string
                      type: array
                    vocabulary_ids:
                      items: {}
                      type: array
                  type: object
                type: array
              rating_template_id:
                type: number
              report_type:
                description: csv or xlsx
                type: string
            type: object
      responses:
        '200':
          description: OK
          schema:
            properties:
              task_id:
                type: string
            type: object
      security:
        - Basic: []
      tags: []
      description: |
        ### Выгрузка отчетов

        `metric_filters` и `phrase_filters` - фильтры в таком же формате как и на странице:

        На этой же странцие описано как получить список метрик ( GET /api/v1/metrics/list). Из этого списка нужно взять требуемые labels и получить из них список metrics.

        `Dimensions` - в этот список могут попасть следующие строки:
        ```
        type - Входящие/исходящие/внутренние
        operatorTeam - Группы операторов
        operator - Операторы
        status - Приняты/не приняты
        hour_of_day - Часы
        day_of_week - Дни недели
        rating - Оценки
        week - Недели
        month_name - Месяцы
        transcript_status - Распознаны/не распознаны
        ```
        Доступные `rating_template_id` можно получить из запроса *rating/templates*

        Вернувшийся `task_id` нужно подставить в метод `async_reports/get_result/{task_id}` для получения результата выполнения операции
      operationId: generateExcel
      summary: Выгрузка отчетов
  '/async_reports/get_result/{task_id}':
    parameters:
      - in: path
        name: task_id
        required: true
        type: string
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            properties: {}
            type: object
      security:
        - Basic: []
      tags: []
      description: |-
        ### Возвращает результат выполнения таски
        Если задача выполнена, то state будет равен **"SUCCESS"**, если ещё выполняется или стоит в очереди то: **"STARTED"**, **"PROGRESS"** или **"PENDING"**.

        А в поле result будет ссылка на отчёт (на файл в формате csv или xlsx).
      operationId: getResult
      summary: Get task result
  /async_search_phrases/find_matching_transcripts:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: 'Создается задача, возвращается task_id'
          in: body
          name: body
          schema:
            properties:
              date_from:
                type: integer
              date_till:
                type: integer
              metric_filters:
                items:
                  properties:
                    label:
                      type: string
                    operator:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
              phrase_filters:
                items:
                  properties:
                    label:
                      type: string
                    min_matches:
                      type: integer
                    operator:
                      type: string
                    value:
                      items: {}
                      type: array
                    vocabulary_ids:
                      items:
                        type: integer
                      type: array
                  type: object
                type: array
            type: object
      responses:
        '200':
          description: OK
          schema:
            properties:
              task_id:
                type: string
            type: object
      security:
        - Basic: []
      tags: []
      description: |-
        date_till - начало временного промежутка поиска (timestamp - целое число)
        date_from - конец временного промежутка поиска (timestamp - целое число)
        metric_filters - количественные фильтры
        phrase_filters - фразовые фильтры
        ### metric_filters

        `metric_filters` - это список объектов, каждый из которых содержит три поля: **value**, **label** и **operator**.

        Пример `metric_filters`:
        ```
        "metric_filters":[
          {
            "value":"3",
            "label":"interjections_count_abs",
            "operator":"<"
          },
          {
            "value":["270", "210"],
            "label":"operator",
            "operator":"="
          },
          ...
        ]
        ```
      operationId: findTranscrib
      summary: Поиск по транскрибации
  '/async_search_phrases/get_result/{task_id}':
    parameters:
      - in: path
        name: task_id
        required: true
        type: string
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            properties:
              error:
                type:
                  - string
                  - 'null'
              result:
                items:
                  type: integer
                type: array
              state:
                type: string
            type: object
      tags: []
      description: |-
        Если задача выполнена, то state будет равен **"SUCCESS"**, если ещё выполняется или стоит в очереди то: **"STARTED"** или **"PENDING"**.

        А в поле **result** будет список id найденных звонков.

        Далее можно получить транскрибацию с размеченными вхождениями слов.
      operationId: getTaskResult
      summary: Статус задачи по поиску
  /auth/login:
    post:
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
      parameters:
        - description: ''
          in: body
          name: body
          schema:
            properties:
              password:
                type: string
              username:
                type: string
            type: object
      responses:
        '200':
          description: OK
          schema:
            properties:
              success:
                type: boolean
            type: object
            x-examples:
              example-1:
                value:
                  success: true
      tags:
        - login
      description: |-
        В ответе есть директива **set-cookie** эту куку надо использовать во всех последующих запросах. |
        Время жизни cookie - 1 год.
      operationId: Login
      summary: Login
  /calls/calls_period:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: ''
          in: header
          name: Content-Type
          required: true
          type: string
        - description: |-
            При том `telephony_id` - это идентификатор звонка из телефонии клиента,
            а `id` - идентификатор звонка нашей системы.
            Если `"transcript_id":null`, значит транскрибация для звонка отсутствует.
          in: body
          name: body
          schema:
            properties:
              date_from:
                type: integer
              date_till:
                type: integer
            type: object
      responses:
        '200':
          description: OK
          headers: {}
          schema:
            properties:
              calls:
                items:
                  properties:
                    account_id:
                      type: integer
                    date_of_call:
                      type: integer
                    duration:
                      type: number
                    id:
                      type: integer
                    phone_number_client:
                      type: string
                    phone_number_operator:
                      type: string
                    telephony_id:
                      type: string
                    type:
                      type: string
                  type: object
                type:
                  - string
                  - array
            type: object
      security:
        - Basic: []
      tags: []
      description: |-
        **date_till** - начало временного промежутка (timestamp - целое число)
        **date_from** - конец временного промежутка (timestamp - целое число)
      operationId: callsPeriod
      summary: Список звонков
  '/calls/{call_id}':
    parameters:
      - in: path
        name: call_id
        required: true
        type: string
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            properties:
              client:
                type: string
              client_freezing:
                type: number
              client_freezing_count:
                type: number
              client_interjections_count:
                type: number
              client_interjections_count_abs:
                type: number
              client_interjections_duration:
                type: number
              client_longest_silence_duration:
                type: number
              client_longest_speech_duration:
                type: number
              client_silence_duration:
                type: number
              client_speech_duration:
                type: number
              date_of_call:
                type: number
              duration:
                type: number
              duration_answer:
                type: number
              hour_of_day:
                type: string
              id:
                type: integer
              interjections_count:
                type: integer
              interjections_count_abs:
                type: integer
              interjections_duration:
                type: number
              longest_interjection:
                type: number
              month_name:
                type: string
              operator:
                type: string
              operator_freezing:
                type: number
              operator_freezing_count:
                type: integer
              rating_details:
                properties:
                  '{template_id}':
                    items:
                      properties:
                        grade:
                          schema:
                            type: number
                        limiting:
                          schema:
                            type: boolean
                        metric_label:
                          schema:
                            type: string
                        metric_name:
                          schema:
                            type: string
                        metric_value:
                          schema:
                            type: number
                      schema:
                        type: object
                    schema:
                      type: array
                schema:
                  type: object
              ratings:
                properties:
                  '{template_id}':
                    type: number
                schema:
                  type:
                    - string
                    - object
              silence_duration:
                type: number
              silence_longest_duration:
                type: number
              speech_rate_client:
                type: number
              speech_rate_operator:
                type: number
              status:
                type: string
              telephony_id:
                type: string
              transcript:
                type: array
            type: object
      security:
        - Basic: []
      tags: []
      description: "### Информация о звонке\n\nМетод позволяет получить разнообразную информацию о звонке, в том числе и информацию об оценках. Поле ratings - это словарь <ID шаблона оценок, усредненная оценка>, а поле rating_details позволяет получить оценку по каждой метрике, которая используется в шаблоне.\n\nТакже метод возвращает транскрибацию заонка в поле transcript\n\nДанный json содержит максимально полную информацию о звонке:\n\n- id\n- telephony_id - ID звонка из телефонии клиента\n- date_of_call - дата звонка\n- client, operator - номер клиента, оператора\n- ratings, rating_details - информация об оценках\n- transcript - транскрибация звонка (текст распознанного диалога)\n- а также параметры речевой активности и различные лексические (словарные) метрики\n\nЛексические метрики - это просто количество найденных фраз из определенного словаря, например: метрика 5080B475_Nekompetentnost'_operatora35684599 (Некомпетентность оператора) - это фразы: «не слышала ни разу», «мне нужно уточнить», «слышу впервые», «ранее не слышал», «не имею понятия», и т. п.\n\nПараметры речевой активности - это, например: operator_speech_duration (длительность речи оператора), interjections_count_abs (количество перебиваний), client_longest_silence_duration\t(максимальный участок молчания клиента) и т. д.\n\nПолный список параметров речевой активности: [https://www.notion.so/cee9287ca6934d75a0f9850e5c85d737](https://www.notion.so/cee9287ca6934d75a0f9850e5c85d737)\nМоменты, которые вызывают вопросы:\n\n1. Чем отличаются метрики с _abs и без?\nМетрики с суффиксом _abs созданы для внутренних целей, они в точности равны тем же метрикам но без этого суффикса.\n2. Как считается длительность перебивания? (interjections_duration)\nДорожка клиента и оператора накладываются друг на друга и считается суммарная длина отрезков, в которые попали оба голоса.\n3. Что такое freezing?\nЭто метрика залипания (считается, что «залип» клиент, если он молчал больше 7,5 секунд после речи оператора).\n4. Что такое speech_rate?\nЭто скорость речи, измеряется в словах в минуту.\n\nratings для каждого rating_template_id (Шаблона оценок) содержит усреднённую оценку по данному шаблону, а rating_details содержит для каждого rating_template_id список метрик с оценками, входящих в этот шаблон."
      operationId: callId
      summary: Call
  '/calls/{call_id}/transcript':
    parameters:
      - in: path
        name: call_id
        required: true
        type: string
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: ''
          in: body
          name: body
          schema:
            properties:
              label:
                type: string
              min_matches:
                type: integer
              operator:
                type: string
              value:
                items: {}
                type: array
              vocabulary_ids:
                items:
                  type: integer
                type: array
            type: object
      responses:
        '200':
          description: OK
          schema:
            properties:
              call_id:
                type: integer
              detailed_matches:
                items:
                  properties:
                    matches:
                      type: integer
                    phrase:
                      type: string
                  type: object
                type: array
              highlights:
                items:
                  properties:
                    matches:
                      items:
                        properties:
                          length:
                            type: integer
                          phrase:
                            type: integer
                          role:
                            type: string
                          symbol:
                            type: integer
                        type: object
                      type: array
                    search_phrase_id:
                      type: integer
                  type: object
                type: array
              matches:
                type: integer
              transcript:
                type: array
            type: object
      security:
        - Basic: []
      tags: []
      description: |-
        **detailed_matches** - список, сколько раз какое слово найдено

        **highlights** - размеченные вхождения.

        phrase - номер реплики (нумерация с 0)

        symbol - номер первого символа вхождения

        length - длина вхождения (в символах)

        role - кто произнес реплику ("client" / "operator")

        **matches** - количество вхождений

        **transcript** - транскрибация звонка
      operationId: callTranscript
      summary: Транскрибация с разметкой
  '/calls/{call_id}/transcript_lite':
    parameters:
      - in: path
        name: call_id
        required: true
        type: string
    post:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            properties:
              call_id:
                type: string
              transcript:
                type: array
            type: object
        '404':
          description: Not Found
          schema:
            properties:
              error:
                type: string
            type: object
      security:
        - Basic: []
      tags: []
      description: |-
        ### Выгрузка транскрибации

        Для пользования этим методом необходимо авторизоваться, то есть оба запроса (запрос авторизации и запрос выгрузки) должны быть в одной сессии.
      operationId: transcriptLite
      summary: Выгрузка транскрибации
  /metrics/list:
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            properties:
              metrics:
                items:
                  properties:
                    aggregate:
                      items:
                        type: string
                      type: array
                    description:
                      type: string
                    filter:
                      type: string
                    is_lexical:
                      type: boolean
                    label:
                      type: string
                    name:
                      type: string
                    parent:
                      type: string
                    rateable:
                      type: boolean
                    relative:
                      type: boolean
                    show_plot:
                      type: boolean
                    show_tabl:
                      type: boolean
                    unit:
                      type: string
                  type: object
                type: array
            type: object
      security:
        - Basic: []
      tags: []
      description: "Выбираем **label** из списка и конструируем объект `metric_filters`. Если `filter.type == range`, то в качестве значения поля **operator** можно выбрать только '**<**' или '**>**', а поля **value** - неотрицательные числа. А если `filter.type == multiselect`, то **operator** - только '**=**', **value** - подсписок списка `filter.choices`. В `metric_filters` можно использовать только не `is_lexical` метрики.\n\nТакже можно фильтровать по номеру клиента (`\"label\":\"client\"`) для этого искомые номера необходимо перечислить в списке **value**, а **operator** задать как '**=**'.\n\n### phrase_filters\n\n`phrase_filters` - список объектов со следующими полями:\n```\nlabel - всегда равен \"phrases\"\noperator - \"operator_include\", \"client_include\" или \"both_include\"- искать \nпо каналу оператора, клиента или по обоим каналам\nvalue - список искомых фраз\nmin_matches - минимальное количество совпадений (целое положительное число)\nvocabulary_ids - список id словарей, по которым будет производиться поиск\n```\nПример:\n```\n{\"phrase_filters\":[\n\t{\n          \"operator\":\"both_include\",\n          \"value\":[],\n          \"label\":\"phrases\",\n          \"min_matches\":2,\n          \"vocabulary_ids\":[425848,179389]\n        },\n        {\n          \"operator\":\"operator_include\",\n          \"value\":[\"Отлично\", \"Добрый день\"],\n          \"label\":\"phrases\",\n          \"min_matches\":1,\n          \"vocabulary_ids\":[]\n        }\n]}\n```\nВ примере в первом случае поиск будет производиться по двум словарям: \"Некомпетентность оператора\" и \"Оператор просит прощения\", в звонке должно найтись по крайней мере суммарно 2 слова из этих словарей. Во втором случае поиск будет только по каналу оператора, в звонках должна найтись хотя бы одна из фраз \"Отлично\" или \"Добрый день\". В результате работы метода будут звонки, которые нашлись одновременно и в первом и во втором случаях.\n"
      operationId: metricList
      summary: Список возможных фильтров
  /rating/templates:
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            items:
              properties:
                decription:
                  type: string
                frozen:
                  type: boolean
                functions:
                  items: {}
                  type: array
                id:
                  type: number
                name:
                  type: string
              type: object
            type: array
      security:
        - Basic: []
      tags: []
      description: '### Список доступных шаблонов оценок'
      operationId: ratingTemplates
      summary: Список доступных шаблонов оценок
  /vocabularies:
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            properties:
              vocabularies:
                items:
                  properties:
                    description:
                      type: string
                    id:
                      type: integer
                    name:
                      type: string
                    role:
                      type: string
                  type: object
                type: array
            type: object
      security:
        - Basic: []
      tags: []
      description: словари
      operationId: vocabularies
      summary: Список доступных словарей
definitions: {}
securityDefinitions:
  Basic:
    description: cookies and header
    scheme: Basic
    type: http
x-components: {}
host: 'https://cloud.speechanalytics.ru/'
basePath: api/v1
