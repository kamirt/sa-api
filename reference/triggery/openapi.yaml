openapi: 3.0.0
info:
  title: Триггеры
  version: '1.0'
  description: "Это API позволяет получать информацию по избранным звонкам: как только приходит новый звонок, удовлетворяющий фильтрам отчета, система отправляет информацию по звонку на указанный сервер.\n\n### Схема работы с API:\n\n1. Получить список отчетов через метод `/reports`\n2. Выбрать нужные отчеты и создать по ним триггеры с помощью метода `/reports/trigger`, указав при этом номер отчета и url-адрес, на который будут отправляться POST-запросы с данными о звонках.\n3. Принимать и обрабатывать сообщения со звонками.\n\n## Специальные триггеры\n\nМожно использовать готовые интеграции на основе триггеров со сторонними системами. \nДля этого надо указать \"специальный\" endpoint_url для подписки на триггеры.\n\n### MarketingHub\n\nДля [marketinghub.ru](http://marketinghub.ru/) можно настроить экспорт телефонных номеров клиентов из звонков, попавших в отчет в аудиторию для последующего таргетинга рекламы.\nВ качестве endpoint_url надо указать урл вида marketinghub://<access_token>\n\n### Usedesk\n\nДля [usedesk.ru](http://usedesk.ru/) можно настроить пересылку транскрибаций звонков, попавших в отчет. В качестве endpoint_url надо указать урл вида usedesk://<api_token>@api.usedesk.ru/\n\n## Обработка сообщений\n\nEndpoint указанный в запросе должен принимать на вход json со следующими полями:\n\n    report_id - id отчёта\n    calls - список звонков, где каждый звонок - это объект со следующими полями:\n    \n    id - внутренний id звонка Speech Analytics\n    telephony_id - id звонка из телефонии\n    date_of_call - дата звонка\n    phone_number_client - номер клиента\n    phone_number_operator - номер оператора\n    operator_name - имя оператора\n    transcript - транскрибация звонка (текст распознанного диалога)\n\nПример:\n\n    {\n       \"report_id\":12345678,\n       \"calls\":[\n          {\n             \"id\":1482470,\n             \"telephony_id\":\"1557839653.1800447\",\n             \"date_of_call\":1557839654,\n             \"phone_number_client\":\"+79261708580\",\n             \"phone_number_operator\":\"270\",\n             \"transcript\":[...]\n          },\n          {\n             \"id\":1481981,\n             \"telephony_id\":\"1557829764.1796966\",\n             \"date_of_call\":1557829764,\n             \"phone_number_client\":\"+79261708580\",\n             \"phone_number_operator\":\"270\",\n             \"transcript\":[\n                   {\n                      \"phrase\":\"Добрый день\",\n                      \"timeEnd\":0.5100000000000051,\n                      \"timeBegin\":0.2700000000000031,\n                      \"role\":\"client\"\n                   },\n                   {\n                      \"phrase\":\"Здравствуйте\",\n                      \"timeEnd\":4.1,\n                      \"timeBegin\":1.46,\n                      \"role\":\"operator\"\n                   },\n                   {\n                      \"phrase\":\"Через час перезвоните, пожалуйста.\",\n                      \"timeEnd\":10.890000000000008,\n                      \"timeBegin\":5.190000000000005,\n                      \"role\":\"client\"\n                   },\n                   {\n                      \"phrase\":\"Так через час\",\n                      \"timeEnd\":13.860000000000001,\n                      \"timeBegin\":11.55,\n                      \"role\":\"operator\"\n                   },\n                   ...\n              ],\n          },\n          ...\n       ]\n    }\n\nОтвет на запрос тоже должен быть в json-формате, ожидается следующий ответ:\n\n    {\"success\": true}\n\nПодробную информацию о звонке можно получить с помощью GET-запроса `/api/v1/calls/{id звонка}`\n\n# Примеры триггеров:\n\n### **Пример 1. Молниеносное оповещение о технических проблемах на сайте компании.**\n\nКлиент зашел на сайт компании, перешел на страницу ЖК, но не смог записаться на демонстрацию объекта. Он позвонил по указанному на сайте телефонному номеру и сообщил, что «**`На сайте проблема, я не смог записаться на демонстрацию`**» и попросил записать его по телефону. \n**Действие:** Через 5 минут этот звонок попал в отчет \"`**Проблемы на сайте**`\" по фразе клиента из звонка \"`**на сайте проблема**`\". Мы сразу же по данному событию отправили IT-специалисту письмо либо создали тикет в поддержке с задачей проверить информацию из звонка клиента. Включили в тикет название отчета, номер клиента, дату звонка, ссылку на запись звонка, транскрибацию диалога.\n\n### **Пример 2. Маркетинговые активности на основе того, что говорит ваш клиент.**\n\nКлиент позвонил застройщику и уточнил какие варианты квартир есть в \"`**ЖК Дикий Запад**`\", также сказал, что обязательно нужен \"**`подземный паркинг`**\". Менеджер дал всю необходимую информацию и клиент пошел думать. \n**Действие:** Этот звонок через 5 минут попал в отчеты «`**ЖК Дикий Запад**`» и «**`Подземный паркинг`**» по произнесенным клиентом ключевым словам. По данному событию мы тут же передали телефон клиента в аудитории рекламной площадки Facebook Ads. Одна аудитория используются в связке с креативами где мы продаем ЖК Дикий Запад, а вторая демонстрирует, что можно получить скидку на паркинг 50% при оплате квартиры и паркинга до конца месяца. Таким образом мы моментально подогреваем клиента для продажи.\n\n### **Пример 3. Как узнать об ошибке менеджера и спасти сделку с клиентом за 5 минут.**\n\nНа финальной стадии сделки клиент позвонил менеджеру и спросил \"`**Почему в договоре отсутствует обещанная скидка**`\". Менеджер сказал, что скидки больше не действуют. Клиент очень расстроился и отказался от сделки. \n**Действие:** Этот звонок через 5 минут попал в отчет \"**`Невыполненные обещания`**\" и тут же отправилось письмо и смс руководителю отдела продаж с детальной информацией в том числе, кто был менеджер. Руководитель отдела связался с менеджером, дальше с клиентом и вернул сделку."
servers:
  - url: 'https://{serverType}.speech.one/api/{basePath}'
    description: The production API server
paths:
  /reports:
    get:
      summary: Отчеты
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example-1:
                  value:
                    reports:
                      - columns: []
                        filters: {}
                        frozen: false
                        id: 98415669
                        name: Лояльность клиентов
                        phrase_filters: []
                        rating_template_id: 42074243
                        slices:
                          - rating
                      - columns: []
                        filters: {}
                        frozen: false
                        id: 63306199
                        name: Качество работы операторов
                        phrase_filters: []
                        rating_template_id: 38878185
                        slices: []
  /reports/trigger:
    post:
      summary: Подписка на триггеры
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                report_id:
                  type: integer
                endpoint_url:
                  type: string
            examples:
              example-1:
                value:
                  report_id: 80286776
                  endpoint_url: 'http://example.com:5001/calls'
      description: |-
        Метод принимает json-объект с параметрами:
        ```
        report_id - идентификатор отчета
        endpoint_url - url на который будут отправляться звонки
        ```
      security:
        - Basic: []
  /reports/triggers:
    post:
      summary: Список подписок на триггеры
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  triggers:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        endpoint_url:
                          type: string
                        report_id:
                          type: integer
                        report_name:
                          type: string
              examples:
                example-1:
                  value:
                    triggers:
                      - id: 1
                        endpoint_url: 'https://...'
                        report_id: 101
                        report_name: Отчет 1
                      - id: 2
                        endpoint_url: 'https://...'
                        report_id: 122
                        report_name: Отчет 3
      security:
        - Basic: []
  '/reports/trigger/{trigger_id}/delete':
    parameters:
      - type: string
        name: trigger_id
        in: path
        required: true
    post:
      summary: Удаление подписки на триггеры
      responses:
        '200':
          description: OK
      description: |-
        Пример:

            POST /api/v1/reports/trigger/2/delete
components:
  schemas: {}
  securitySchemes:
    Basic:
      type: http
      scheme: Basic
      description: cookies and header
